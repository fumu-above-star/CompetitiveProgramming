#include <iostream> //spfp
#include <vector>
#include <string>
#include <algorithm>
#include <cmath>
#include <map>
#include <utility> //pair
#include <queue>
#include <set>
#include <iomanip>//setprecision
using namespace std;
using Graph = vector<vector<int> >;
using P = pair<int,int>;

long long mod = 998244353;
 
const long long INF = 1LL << 60;//LL–Y‚ê
const double PI = 3.1415926535;

long long dp[200010][2];
int main() {
  int n;
  cin >> n;
  long long a[n],b[n];
  for(int i = 0; i < n; i++){
    cin >> a[i] >> b[i];
  }
  dp[0][0] = 1;//1–‡–Ú‚Í•\‚Å‚à— ‚Å‚à‚æ‚­—¼•û‚Æ‚à1’Ê‚è‚ ‚é
  dp[0][1] = 1;//i‚Í0‚¾‚ª1–‡–Ú(0–‡–Ú)
  for(int i = 1; i < n; i++){ //1~N‚ð0~n-1
    if(a[i] != a[i-1]) dp[i][0] += dp[i-1][0]; 
    if(a[i] != b[i-1]) dp[i][0] += dp[i-1][1];
    if(b[i] != a[i-1]) dp[i][1] += dp[i-1][0];
    if(b[i] != b[i-1]) dp[i][1] += dp[i-1][1];
    dp[i][0] %= mod;
    dp[i][1] %= mod;

  }

  cout << dp[n-1][0]%mod + dp[n-1][1] %mod << endl;
}